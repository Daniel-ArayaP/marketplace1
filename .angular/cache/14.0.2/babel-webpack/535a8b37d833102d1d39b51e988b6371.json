{"ast":null,"code":"import { Api } from '../config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductsService = /*#__PURE__*/(() => {\n  class ProductsService {\n    constructor(http) {\n      this.http = http;\n      this.api = Api.url;\n    }\n\n    getData() {\n      return this.http.get(`${this.api}products.json`);\n    }\n\n    getLimitData(startAt, limitToFirst) {\n      return this.http.get(`${this.api}products.json?orderBy=\"$key\"&startAt=\"${startAt}\"&limitToFirst=${limitToFirst}&print=pretty`);\n    }\n\n    getFilterData(orderBy, equalTo) {\n      return this.http.get(`${this.api}products.json?orderBy=\"${orderBy}\"&equalTo=\"${equalTo}\"&print=pretty`);\n    }\n\n    getFilterDataWithLimit(orderBy, equalTo, limitToFirst) {\n      return this.http.get(`${this.api}products.json?orderBy=\"${orderBy}\"&equalTo=\"${equalTo}\"&limitToFirst=${limitToFirst}&print=pretty`);\n    }\n\n    getSearchData(orderBy, param) {\n      return this.http.get(`${this.api}products.json?orderBy=\"${orderBy}\"&startAt=\"${param}\"&endAt=\"${param}\\uf8ff\"&print=pretty`);\n    }\n\n    patchData(id, value) {\n      return this.http.patch(`${this.api}products/${id}.json`, value);\n    }\n\n  }\n\n  ProductsService.ɵfac = function ProductsService_Factory(t) {\n    return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductsService,\n    factory: ProductsService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductsService;\n})();","map":null,"metadata":{},"sourceType":"module"}