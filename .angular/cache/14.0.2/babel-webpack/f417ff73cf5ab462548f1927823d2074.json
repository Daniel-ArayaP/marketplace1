{"ast":null,"code":"import { Path } from '../../../../config';\nimport { DinamicPrice, Sweetalert } from '../../../../functions';\nimport { Subject } from 'rxjs';\nimport notie from 'notie';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../services/users.service\";\nimport * as i2 from \"../../../../services/products.service\";\nexport let AccountWishlistComponent = /*#__PURE__*/(() => {\n  class AccountWishlistComponent {\n    constructor(usersService, productsService) {\n      this.usersService = usersService;\n      this.productsService = productsService;\n      this.path = Path.url;\n      this.wishlist = [];\n      this.products = [];\n      this.price = [];\n      this.render = true;\n      this.dtOptions = {};\n      this.dtTrigger = new Subject();\n      this.popoverMessage = 'Are you sure to remove it?';\n    }\n\n    ngOnInit() {\n      /*=============================================\r\n      Agregamos opciones a DataTable\r\n      =============================================*/\n      this.dtOptions = {\n        pagingType: 'full_numbers',\n        processing: true\n      };\n      /*=============================================\r\n      Seleccionamos el id del usuario\r\n      =============================================*/\n\n      this.usersService.getUniqueData(this.childItem).subscribe(resp => {\n        if (resp[\"wishlist\"] != undefined) {\n          /*=============================================\r\n          Tomamos de la data la lista de deseos\r\n          =============================================*/\n          this.wishlist = JSON.parse(resp[\"wishlist\"]);\n          let load = 0;\n          /*=============================================\r\n          Realizamos un foreach en la lista de deseos\r\n          =============================================*/\n\n          if (this.wishlist.length > 0) {\n            this.wishlist.forEach(list => {\n              /*=============================================\r\n              Filtramos la data de productos\r\n              =============================================*/\n              this.productsService.getFilterData(\"url\", list).subscribe(resp => {\n                /*=============================================\r\n                recorremos la data de productos\r\n                =============================================*/\n                for (const i in resp) {\n                  load++;\n                  /*=============================================\r\n                  agregamos los productos\r\n                  =============================================*/\n\n                  this.products.push(resp[i]);\n                  /*=============================================\r\n                  validamos los precios en oferta\r\n                  =============================================*/\n\n                  this.price.push(DinamicPrice.fnc(resp[i]));\n                  /*=============================================\r\n                  preguntamos cuando termina de cargar toda la data en el DOM\r\n                  =============================================*/\n\n                  if (load == this.wishlist.length) {\n                    this.dtTrigger.next();\n                  }\n                }\n              });\n            });\n          }\n        }\n      });\n    }\n    /*=============================================\r\n    Removemos el producto de la lista de deseos\r\n    =============================================*/\n\n\n    removeProduct(product) {\n      /*=============================================\r\n      Buscamos coincidencia para remover el producto\r\n      =============================================*/\n      this.wishlist.forEach((list, index) => {\n        if (list == product) {\n          this.wishlist.splice(index, 1);\n        }\n      });\n      /*=============================================\r\n      Actualizamos en Firebase la lista de deseos\r\n      =============================================*/\n\n      let body = {\n        wishlist: JSON.stringify(this.wishlist)\n      };\n      this.usersService.patchData(this.childItem, body).subscribe(resp => {\n        if (resp[\"wishlist\"] != \"\") {\n          Sweetalert.fnc(\"success\", \"Product removed\", \"account\");\n        }\n      });\n    }\n    /*=============================================\r\n    Callback\r\n    =============================================*/\n\n\n    callback() {\n      if (this.render) {\n        this.render = false;\n\n        if (window.matchMedia(\"(max-width:991px)\").matches) {\n          let localWishlist = this.wishlist;\n          let localUsersService = this.usersService;\n          let localChildItem = this.childItem;\n          $(document).on(\"click\", \".removeProduct\", function () {\n            let product = $(this).attr(\"remove\");\n            notie.confirm({\n              text: \"Are you sure to remove it?\",\n              cancelCallback: function () {\n                return;\n              },\n              submitCallback: function () {\n                /*=============================================\r\n                Buscamos coincidencia para remover el producto\r\n                =============================================*/\n                localWishlist.forEach((list, index) => {\n                  if (list == product) {\n                    localWishlist.splice(index, 1);\n                  }\n                });\n                /*=============================================\r\n                Actualizamos en Firebase la lista de deseos\r\n                =============================================*/\n\n                let body = {\n                  wishlist: JSON.stringify(localWishlist)\n                };\n                localUsersService.patchData(localChildItem, body).subscribe(resp => {\n                  if (resp[\"wishlist\"] != \"\") {\n                    Sweetalert.fnc(\"success\", \"Product removed\", \"account\");\n                  }\n                });\n              }\n            });\n          });\n        }\n      }\n    }\n    /*=============================================\r\n    Destruímos el trigger de angular\r\n    =============================================*/\n\n\n    ngOnDestroy() {\n      this.dtTrigger.unsubscribe();\n    }\n\n  }\n\n  AccountWishlistComponent.ɵfac = function AccountWishlistComponent_Factory(t) {\n    return new (t || AccountWishlistComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.ProductsService));\n  };\n\n  AccountWishlistComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AccountWishlistComponent,\n    selectors: [[\"app-account-wishlist\"]],\n    inputs: {\n      childItem: \"childItem\"\n    },\n    decls: 2,\n    vars: 0,\n    template: function AccountWishlistComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"account-wishlist works!\");\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  return AccountWishlistComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}