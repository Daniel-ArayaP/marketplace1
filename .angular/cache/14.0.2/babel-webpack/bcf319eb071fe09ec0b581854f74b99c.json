{"ast":null,"code":"import { Path } from '../../../config';\nimport { Rating } from '../../../functions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/categories.service\";\nimport * as i2 from \"../../../services/sub-categories.service\";\nimport * as i3 from \"../../../services/products.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\n\nfunction HomeShowcaseComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"ul\");\n    i0.ɵɵelementStart(5, \"a\", 7);\n    i0.ɵɵtext(6, \"View All\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵelement(8, \"div\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"div\", 9);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r3 = ctx.$implicit;\n    const lastIndex_r4 = ctx.last;\n    const i_r5 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(category_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"category-showcase\", category_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"products/\", category_r3.url, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵattribute(\"category-sl\", category_r3.url);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"category-pb\", category_r3.url);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", lastIndex_r4 ? ctx_r2.callback(i_r5) : \"\", \" \");\n  }\n}\n\nfunction HomeShowcaseComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, HomeShowcaseComponent_div_1_div_1_Template, 11, 6, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.categories);\n  }\n}\n\nfunction HomeShowcaseComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let HomeShowcaseComponent = /*#__PURE__*/(() => {\n  class HomeShowcaseComponent {\n    constructor(categoriesService, subCategoriesService, productsService) {\n      this.categoriesService = categoriesService;\n      this.subCategoriesService = subCategoriesService;\n      this.productsService = productsService;\n      this.path = Path.url;\n      this.categories = [];\n      this.cargando = false;\n      this.render = true;\n    }\n\n    ngOnInit() {\n      this.cargando = true;\n      /*=============================================\r\n      Tomamos la data de las categorias\r\n      =============================================*/\n\n      let getCategories = [];\n      this.categoriesService.getData().subscribe(resp => {\n        let i;\n\n        for (i in resp) {\n          getCategories.push(resp[i]);\n        }\n        /*=============================================\r\n        Ordenamos de mayor vistas a menor vistas el arreglo de objetos\r\n        =============================================*/\n\n\n        getCategories.sort(function (a, b) {\n          return b.view - a.view;\n        });\n        /*=============================================\r\n        Filtramos hasta 6 categorías\r\n        =============================================*/\n\n        getCategories.forEach((category, index) => {\n          if (index < 6) {\n            this.categories[index] = getCategories[index];\n            this.cargando = false;\n          }\n        });\n      });\n    }\n    /*=============================================\r\n    Función que nos avisa cuando finaliza el renderizado de Angular\r\n    =============================================*/\n\n\n    callback(indexes) {\n      if (this.render) {\n        this.render = false;\n        let arraySubCategories = [];\n        let arrayProducts = [];\n        let preloadSV = 0;\n        /*=============================================\r\n        Separar las categorías\r\n        =============================================*/\n\n        this.categories.forEach((category, index) => {\n          /*=============================================\r\n          Tomamos la colección de las sub-categorías filtrando con los nombres de categoría\r\n          =============================================*/\n          this.subCategoriesService.getFilterData(\"category\", category.name).subscribe(resp => {\n            let i;\n\n            for (i in resp) {\n              arraySubCategories.push({\n                \"category\": resp[i].category,\n                \"subcategory\": resp[i].name,\n                \"url\": resp[i].url\n              });\n            }\n            /*=============================================\r\n            Recorremos el array de objetos nuevo para buscar coincidencias con los nombres de categorías\r\n            =============================================*/\n\n\n            for (i in arraySubCategories) {\n              if (category.name == arraySubCategories[i].category) {\n                $(`[category-showcase='${category.name}']`).append(`\n\n\t\t\t\t\t\t\t\t<li><a href=\"products/${arraySubCategories[i].url}\">${arraySubCategories[i].subcategory}</a></li>\n\n\t\t\t\t\t\t\t`);\n              }\n            }\n          });\n          /*=============================================\r\n          Tomamos la colección de los productos filtrando con las url's de categorías\r\n          =============================================*/\n\n          this.productsService.getFilterDataWithLimit(\"category\", category.url, 6).subscribe(resp => {\n            let i;\n\n            for (i in resp) {\n              arrayProducts.push({\n                \"category\": resp[i].category,\n                \"url\": resp[i].url,\n                \"name\": resp[i].name,\n                \"image\": resp[i].image,\n                \"price\": resp[i].price,\n                \"offer\": resp[i].offer,\n                \"reviews\": resp[i].reviews,\n                \"stock\": resp[i].stock,\n                \"vertical_slider\": resp[i].vertical_slider\n              });\n            }\n            /*=============================================\r\n            Recorremos el array de objetos nuevo para buscar coincidencias con las url de categorías\r\n            =============================================*/\n\n\n            for (i in arrayProducts) {\n              if (category.url == arrayProducts[i].category) {\n                /*=============================================\r\n                Definimos si el precio del producto tiene oferta o no\r\n                =============================================*/\n                let price;\n                let type;\n                let value;\n                let offer;\n                let disccount = \"\";\n                let offerDate;\n                let today = new Date();\n\n                if (arrayProducts[i].offer != \"\") {\n                  offerDate = new Date(parseInt(JSON.parse(arrayProducts[i].offer)[2].split(\"-\")[0]), parseInt(JSON.parse(arrayProducts[i].offer)[2].split(\"-\")[1]) - 1, parseInt(JSON.parse(arrayProducts[i].offer)[2].split(\"-\")[2]));\n\n                  if (today < offerDate) {\n                    type = JSON.parse(arrayProducts[i].offer)[0];\n                    value = JSON.parse(arrayProducts[i].offer)[1];\n\n                    if (type == \"Disccount\") {\n                      offer = (arrayProducts[i].price - arrayProducts[i].price * value / 100).toFixed(2);\n                    }\n\n                    if (type == \"Fixed\") {\n                      offer = value;\n                      value = Math.round(offer * 100 / arrayProducts[i].price);\n                    }\n\n                    disccount = `<div class=\"ps-product__badge\">-${value}%</div>`;\n                    price = `<p class=\"ps-product__price sale\">$${offer} <del>$${arrayProducts[i].price} </del></p>`;\n                  } else {\n                    price = `<p class=\"ps-product__price\">$${arrayProducts[i].price} </p>`;\n                  }\n                } else {\n                  price = `<p class=\"ps-product__price\">$${arrayProducts[i].price} </p>`;\n                }\n                /*=============================================\r\n                Calculamos el total de las calificaciones de las reseñas\r\n                =============================================*/\n\n\n                let totalReview = 0;\n\n                for (let f = 0; f < JSON.parse(arrayProducts[i].reviews).length; f++) {\n                  totalReview += Number(JSON.parse(arrayProducts[i].reviews)[f][\"review\"]);\n                }\n                /*=============================================\r\n                Imprimimos el total de las calficiaciones para cada producto\r\n                =============================================*/\n\n\n                let rating = Math.round(totalReview / JSON.parse(arrayProducts[i].reviews).length);\n                /*=============================================\r\n                Definimos si el producto tiene stock\r\n                =============================================*/\n\n                if (arrayProducts[i].stock == 0) {\n                  disccount = `<div class=\"ps-product__badge out-stock\">Out Of Stock</div>`;\n                }\n                /*=============================================\r\n                Imprimimos los productos en el HTML\r\n                =============================================*/\n\n\n                $(`[category-pb='${arrayProducts[i].category}']`).append(`\n\n\t\t\t\t\t\t\t\t <div class=\"ps-product ps-product--simple\">\n\n\t\t\t\t                    <div class=\"ps-product__thumbnail\">\n\n\t\t\t\t                    \t<a href=\"product/${arrayProducts[i].url}\">\n\n\t\t\t\t                    \t\t<img src=\"assets/img/products/${arrayProducts[i].category}/${arrayProducts[i].image}\" alt=\"\">\n\n\t\t\t\t                    \t</a>\n\n\t\t\t\t                        ${disccount}\n\n\t\t\t\t                    </div>\n\n\t\t\t\t                    <div class=\"ps-product__container\">\n\n\t\t\t\t                        <div class=\"ps-product__content\" data-mh=\"clothing\">\n\n\t\t\t\t                        \t<a class=\"ps-product__title\" href=\"product/${arrayProducts[i].url}\">${arrayProducts[i].name}</a>\n\n\t\t\t\t                            <div class=\"ps-product__rating\">\n\n\t\t\t\t                                <select class=\"ps-rating productRating\" data-read-only=\"true\">\n\n\t\t\t\t                                </select>\n\n\t\t\t\t                                <span>${rating}</span>\n\n\t\t\t\t                            </div>\n\n\t\t\t\t                            ${price}\n\n\t\t\t\t                        </div>\n\n\t\t\t\t                    </div>\n\n\t\t\t\t                </div> \n\n\t\t\t                `);\n                /*=============================================\r\n                Clasificamos la cantidad de estrellas según la calificación\r\n                =============================================*/\n\n                let arrayRating = $(\".productRating\");\n\n                for (let i = 0; i < arrayRating.length; i++) {\n                  for (let f = 1; f <= 5; f++) {\n                    $(arrayRating[i]).append(`<option value=\"2\">${f}</option>`);\n\n                    if (rating == f) {\n                      $(arrayRating[i]).children('option').val(1);\n                    }\n                  }\n                }\n                /*=============================================\r\n                Ejecutar funciones globales con respecto a las Reseñas\r\n                =============================================*/\n\n\n                Rating.fnc();\n                /*=============================================\r\n                Imprimimos los productos en el Vertical Slider\r\n                =============================================*/\n\n                $(`[category-sl='${arrayProducts[i].category}']`).append(`\n\n\t\t\t\t\t\t\t\t<a href=\"product/${arrayProducts[i].url}\">\n\n\t\t\t                \t\t<img src=\"assets/img/products/${arrayProducts[i].category}/vertical/${arrayProducts[i].vertical_slider}\" alt=\"\">\n\n\t\t\t                \t</a>\n\n\t\t\t\t\t\t\t`);\n                /*=============================================\r\n                Ejecutar funciones globales con respecto al carrusel\r\n                =============================================*/\n\n                preloadSV++;\n\n                if (preloadSV == (indexes + 1) * 6) {\n                  $(`[category-sl]`).addClass('ps-carousel--product-box');\n                  $(`[category-sl]`).addClass('owl-slider');\n                  $(`[category-sl]`).owlCarousel({\n                    items: 1,\n                    autoplay: true,\n                    autoplayTimeout: 7000,\n                    loop: true,\n                    nav: true,\n                    margin: 0,\n                    dots: true,\n                    navSpeed: 500,\n                    dotsSpeed: 500,\n                    dragEndSpeed: 500,\n                    navText: [\"<i class='icon-chevron-left'></i>\", \"<i class='icon-chevron-right'></i>\"]\n                  });\n                }\n              }\n            }\n          });\n        });\n      }\n    }\n\n  }\n\n  HomeShowcaseComponent.ɵfac = function HomeShowcaseComponent_Factory(t) {\n    return new (t || HomeShowcaseComponent)(i0.ɵɵdirectiveInject(i1.CategoriesService), i0.ɵɵdirectiveInject(i2.SubCategoriesService), i0.ɵɵdirectiveInject(i3.ProductsService));\n  };\n\n  HomeShowcaseComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeShowcaseComponent,\n    selectors: [[\"app-home-showcase\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"ps-section--gray\"], [\"class\", \"container\", 4, \"ngIf\"], [\"class\", \"d-flex justify-content-center\", 4, \"ngIf\"], [1, \"container\"], [\"class\", \"ps-block--products-of-category\", 4, \"ngFor\", \"ngForOf\"], [1, \"ps-block--products-of-category\"], [1, \"ps-block__categories\"], [1, \"ps-block__more-link\", 3, \"routerLink\"], [1, \"ps-block__slider\"], [1, \"ps-block__product-box\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"spinner-border\", \"text-muted\", \"my-5\"]],\n    template: function HomeShowcaseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, HomeShowcaseComponent_div_1_Template, 2, 1, \"div\", 1);\n        i0.ɵɵtemplate(2, HomeShowcaseComponent_div_2_Template, 2, 0, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.cargando);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.cargando);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.RouterLinkWithHref]\n  });\n  return HomeShowcaseComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}